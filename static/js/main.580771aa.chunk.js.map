{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","resetGame","bind","i","this","slice","setState","handleClick","status","winner","linesToCheck","length","a","b","c","calculateWinner","renderSquare","React","Component","Game","ReactDOM","render","document","getElementById"],"mappings":"yMAIA,SAASA,EAAOC,GAEZ,OACE,wBAAQC,UAAU,SAASC,QAAS,WAAOF,EAAME,WAAjD,SACGF,EAAMG,Q,IAMTC,E,kDAEJ,WAAaJ,GAAQ,IAAD,8BAClB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,GAEX,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBANC,E,wDAURC,GAGV,IAAMN,EAAUO,KAAKR,MAAMC,QAAQQ,QACnCR,EAAQM,GAAKC,KAAKR,MAAMI,QAAU,IAAM,IACxCI,KAAKE,SACH,CACET,QAASA,EACTG,SAAUI,KAAKR,MAAMI,Y,mCAKdG,GAAI,IAAD,OACd,OAAQ,cAACb,EAAD,CACNI,MAAOU,KAAKR,MAAMC,QAAQM,GAC1BV,QAAS,kBAAM,EAAKc,YAAYJ,Q,kCAKlCC,KAAKE,SACH,CACET,QAASC,MAAM,GAAGC,KAAK,MACvBC,SAAS,M,+BAOb,IAEIQ,EAFEC,EAyDV,SAAyBZ,GAYvB,IAXA,IAAMa,EAAe,CACnB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAP,EAAI,EAAGA,EAAGO,EAAaC,OAAQR,IAAK,CAAC,IAAD,cACzBO,EAAaP,GADY,GACpCS,EADoC,KACjCC,EADiC,KAC9BC,EAD8B,KAE3C,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GACpE,OAAOjB,EAAQe,GAGnB,OAAO,KA3EUG,CAAgBX,KAAKR,MAAMC,SAS1C,OALEW,EADEC,EACO,YAAcA,EAEd,iBAAmBL,KAAKR,MAAMI,QAAU,IAAM,KAIvD,gCACE,qBAAKR,UAAU,SAAf,SAA0BgB,IAC1B,sBAAKhB,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACGY,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,MAErB,sBAAKxB,UAAU,YAAf,UACGY,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,MAErB,sBAAKxB,UAAU,YAAf,UACGY,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,GAClBZ,KAAKY,aAAa,SAGvB,wBAAQxB,UAAU,UAAUC,QAASW,KAAKH,UAA1C,kC,GAxEYgB,IAAMC,WA+EpBC,E,uKAKF,OACE,sBAAK3B,UAAU,OAAf,UACE,qBAAKA,UAAU,cAEb,cAACG,EAAD,W,GATSsB,IAAMC,WAgBzBE,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,U","file":"static/js/main.580771aa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n\n    return (\n      <button className=\"square\" onClick={() => {props.onClick()}}>\n        {props.value}\n      </button>\n    );\n\n}\n\nclass Board extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n    this.resetGame = this.resetGame.bind(this);\n\n  }\n\n  handleClick(i) {\n\n    //copio l'array\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState(\n      {\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      }\n    );\n  }\n\n  renderSquare(i) {\n    return (<Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)} />\n    );\n  }\n\n  resetGame () {\n    this.setState(\n      {\n        squares: Array(9).fill(null),\n        xIsNext: true\n      }\n    );\n  }\n\n  render() {\n\n    const winner = calculateWinner(this.state.squares);\n\n    let status;\n    if (winner) {\n      status = \"Ha vinto \" + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{ status }</div>\n        <div className=\"board\">\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n        <button className=\"rigioca\" onClick={this.resetGame}>Gioca ancora!</button>\n      </div>\n\n    );\n  }\n}\n\nclass Game extends React.Component {\n\n\n\n  render () {\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n        </div>\n          <Board />\n      </div>\n    );\n  }\n}\n\n/* ----------------- */\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const linesToCheck = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8]\n  ];\n\n  for (let i = 0; i< linesToCheck.length; i++) {\n    const [a, b, c] = linesToCheck[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}